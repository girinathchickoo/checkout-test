import {
  injected,
  coinbaseWallet,
  metaMask,
  walletConnect,
} from "wagmi/connectors";
import {
  mainnet,
  polygon,
  optimism,
  goerli,
  sepolia,
  polygonMumbai,
  bsc,
  zkSync,
  base,
  arbitrum,
  fantom,
  avalanche,
  polygonZkEvm,
  fuse,
  boba,
  okc,
  moonriver,
  aurora,
  linea,
  gnosis,
  moonbeam,
  cronos,
  evmos,
  telos,
  harmonyOne,
} from "@wagmi/core/chains";
import { http, createConfig, WagmiProvider, configureChains } from "wagmi";
const config = createConfig({
  multiInjectedProviderDiscovery: true,
  connectors: [
    // metaMask(),
    // coinbaseWallet(),
    injected(),
    walletConnect({ projectId: "a3cc5b84df95db911e2f9f9655114425" }),
  ],
  ssr: false,
  chains: [
    polygon,
    optimism,
    mainnet,
    goerli,
    sepolia,
    polygonMumbai,
    bsc,
    zkSync,
    base,
    arbitrum,
    fantom,
    avalanche,
    polygonZkEvm,
    fuse,
    boba,
    okc,
    moonriver,
    aurora,
    linea,
    gnosis,
    moonbeam,
    cronos,
    evmos,
    telos,
    harmonyOne,
  ],
  transports: {
    [polygon.id]: http(
      "https://polygon-mainnet.g.alchemy.com/v2/UPTSl0S8hg5frz84jM4q1xc1pJzjHL86"
    ),
    [optimism.id]: http(),
    [mainnet.id]: http(),
    [goerli.id]: http(),
    [sepolia.id]: http(),
    [polygonMumbai.id]: http(),
    [bsc.id]: http(),
    [zkSync.id]: http(),
    [base.id]: http(),
    [arbitrum.id]: http(),
    [fantom.id]: http(),
    [avalanche.id]: http(),
    [polygonZkEvm.id]: http(),
    [fuse.id]: http(),
    [boba.id]: http(),
    [okc.id]: http(),
    [moonriver.id]: http(),
    [aurora.id]: http(),
    [linea.id]: http(),
    [gnosis.id]: http(),
    [moonbeam.id]: http(),
    [cronos.id]: http(),
    [evmos.id]: http(),
    [telos.id]: http(),
    [harmonyOne.id]: http(),
  },
});
export default config;
